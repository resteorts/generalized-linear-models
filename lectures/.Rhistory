install.packages("library(mvtnorm)")
install.packages("mvtnorm")
2337.089 -2200.94
exp(0.754)
exp{1.136}
exp(1.136)
âˆ’0.6036+1.1364
0.6036 + 1.1364
-0.6036 + 1.1364
install.packges("openintro")
install.packages("openintro")
7+11+3+4
7/25
n <- 10
successes <- 3
failures <- n - successes
likelihood_function <- function(theta) {
return((theta^successes) * ((1 - theta)^failures))
}
theta_values <- seq(0, 1, length.out = 100)
# Calculate the likelihood for each theta
likelihood_values <- sapply(theta_values, likelihood_function)
# Plot the likelihood function
plot(theta_values, likelihood_values, type = "l", col = "blue",
main = "Likelihood Function for Bernoulli Distribution",
xlab = "Theta (Heads)",
ylab = "Likelihood", lwd = 2)
# Placeholder for likelihood values
likelihood_values <- numeric(length(theta_values))
n <- 10
successes <- 3
failures <- n - successes
likelihood_function <- function(theta) {
return((theta^successes) * ((1 - theta)^failures))
}
theta_values <- seq(0, 1, length.out = 100)
# Calculate the likelihood for each theta
likelihood_values <- sapply(theta_values, likelihood_function)
plot(theta_values, likelihood_values, type = "l", col = "blue",
main = "Likelihood Function for Bernoulli Distribution",
xlab = "Theta (Heads)",
ylab = "Likelihood", lwd = 2)
# Find the theta value that maximizes the likelihood
theta_MLE <- theta_values[which.max(likelihood_values)]
theta_MLE
theta_values <- seq(0, 1, length.out = 10000)
successes <- 3
failures <- n - successes
likelihood_function <- function(theta) {
return((theta^successes) * ((1 - theta)^failures))
}
theta_values <- seq(0, 1, length.out = 10000)
# Calculate the likelihood for each theta
likelihood_values <- sapply(theta_values, likelihood_function)
likelihood_values <- numeric(length(theta_values))
# Perform grid search
for (i in 1:length(theta_values)) {
likelihood_values[i] <- likelihood_function(theta_values[i])
}
# Find the theta value that maximizes the likelihood
theta_MLE <- theta_values[which.max(likelihood_values)]
max_likelihood <- max(likelihood_values)
theta_MLE
9+4+6+7+14+1+5
3+2+3+7+7+1+5+2
9+4+6+7+1+5
3+2+2+1+1
9+ 1+2
9+4+6+7+14+1+5
2+3+14+7+2+10+6
5+3+7+7
13+9+6+3+23
54+15
15+7
22+13+9+6+3+23
14+3+2+3
8+14
22+23+13+10+13+9
22+23
25+23
10 + 13
13= ()
13+9
22/45
13/23
13/22
knitr::opts_chunk$set(echo = T,
results = "hide")
library(tidyverse)
library(tidymodels)
library(GGally)
library(knitr)
library(patchwork)
library(viridis)
library(ggfortify)
ggplot2::theme_set(ggplot2::theme_bw(base_size = 16))
colors <- tibble::tibble(green = "#B5BA72")
loglik2 <- function(phn, phh, phv) {
log(phn^{22} * (1 - phn)^{23} * phh^{13} *
(1 - phh)^{10} * phv^{13} * (1 - phv)^9)
}
(loglik2(22/45, 13/23, 13/22))
(diff <- loglik2(22/45, 13/23, 13/22) - loglik1(46/90))
loglik1 <- function(ph){
log(ph^46 * (1 - ph)^44)
}
(diff <- loglik2(22/45, 13/23, 13/22) - loglik1(46/90))
(LRT <- 2 * (loglik2(22/45, 13/23, 13/22) - loglik1(46/90)))
pchisq(LRT, 2, lower.tail = FALSE)
(Model1_AIC <- 2 * loglik1(46/90) + 2 * 1)
(Model2_AIC <-2 * loglik2(22/45, 13/23, 13/22) + 2 * 3)
(Model1_BIC <- 2 * loglik1(46/90) + 1 * log(30))
(Model2_BIC <-2 * loglik2(22/45, 13/23, 13/22) + 3 * log(30))
3 + 2 + 3 + 7 + 7
3 + 7 + 2 + 5 + 2
3 + 2 + 3 + 7 + 7
7 + 7 + 2 + 5 + 2
6+ 4 + 3
45+23+22
25+23
48+20
25/48
knitr::opts_chunk$set(echo = T,
results = "hide")
library(tidyverse)
library(tidymodels)
library(GGally)
library(knitr)
library(patchwork)
library(viridis)
library(ggfortify)
ggplot2::theme_set(ggplot2::theme_bw(base_size = 16))
colors <- tibble::tibble(green = "#B5BA72")
loglik2 <- function(phn, phh, phv) {
log(phn^25 * (1 - phn)^23 * phh^8 *
(1 - phh)^12 * phv^13 * (1 - phv)^9)
}
loglik2(25/48, 8/20, 13/22)
(Model2_AIC <- 2* loglik2(25/48, 8/20, 13/22) + 2 * 3)
(Model2_BIC <-2 * loglik2(25/48, 8/20, 13/22)
+ 3 * log(30))
exp(0.0005)
exp(-0.0005)
1-0.9995
5e-04*100
exp(-0.0994)
1 - 0.9053
0.0947*100
tinytex::reinstall_tinytex(repository = "illinois")
exp(-0.444), exp(-0.029)
exp(-0.0444)
exp(-0.029)
-0.232 + 1.96*0.108
-0.232 - 1.96*0.108
library(tidyverse)
library(tidymodels)
library(knitr)
library(patchwork)
library(viridis)
library(kableExtra)
library(magrittr)
knitr::opts_chunk$set(fig.width = 8,
fig.asp = 0.618,
fig.retina = 3,
dpt = 300,
out.width = "90%",
fig.align = "center")
ggplot2::theme_set(ggplot2::theme_bw(base_size = 16))
colors <- tibble::tibble(green = "#B5BA72")
head(Challeng)
library(alr4)
library(mosaic)
library(DT)
library(pander)
head(Challeng)
-0.232 + 1.96*0.108
exp(-0.0203)
1-0.946
1-0.812
1-0.979
1-.994
0.006*100
e^{-0.0208}
exp(-0.0208)
exp(-0.0056)
library(tidyverse)
library(tidymodels)
library(knitr)
library(margins)
library(ggtern)
library(viridis)
knitr::opts_chunk$set(fig.width = 8,
fig.asp = 0.618,
fig.retina = 3,
dpt = 300,
out.width = "70%",
fig.align = "center")
ggplot2::theme_set(ggplot2::theme_bw(base_size = 16))
colors <- tibble::tibble(green = "#B5BA72")
set.seed(42)
n_trials <- 10000
probs <- c(0.2, 0.5, 0.3)
categories <- c("A", "B", "C")
# each observation is a 0/1 draw for the category
sim_data <- rmultinom(n = n_trials, size = 1, prob = probs)
# for each observation, we update if it belongs with category 1,2 or 3
category_indices <- apply(sim_data, 2, function(x) which(x == 1))
category_indices
category_labels <- categories[category_indices]
category_labels <- categories[category_indices]
category_labels
df <- data.frame(Category = factor(category_labels,
levels = categories))
df
head(df)
table(df$Category)
prop.table(table(df$Category))
exp(-3.398)
exp(0.016)
exp(-0.950)
0.033 * 100
exp(-0.950)
0.386*100
