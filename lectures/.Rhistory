install.packages("library(mvtnorm)")
install.packages("mvtnorm")
2337.089 -2200.94
exp(0.754)
exp{1.136}
exp(1.136)
âˆ’0.6036+1.1364
0.6036 + 1.1364
-0.6036 + 1.1364
install.packges("openintro")
install.packages("openintro")
7+11+3+4
7/25
n <- 10
successes <- 3
failures <- n - successes
likelihood_function <- function(theta) {
return((theta^successes) * ((1 - theta)^failures))
}
theta_values <- seq(0, 1, length.out = 100)
# Calculate the likelihood for each theta
likelihood_values <- sapply(theta_values, likelihood_function)
# Plot the likelihood function
plot(theta_values, likelihood_values, type = "l", col = "blue",
main = "Likelihood Function for Bernoulli Distribution",
xlab = "Theta (Heads)",
ylab = "Likelihood", lwd = 2)
# Placeholder for likelihood values
likelihood_values <- numeric(length(theta_values))
n <- 10
successes <- 3
failures <- n - successes
likelihood_function <- function(theta) {
return((theta^successes) * ((1 - theta)^failures))
}
theta_values <- seq(0, 1, length.out = 100)
# Calculate the likelihood for each theta
likelihood_values <- sapply(theta_values, likelihood_function)
plot(theta_values, likelihood_values, type = "l", col = "blue",
main = "Likelihood Function for Bernoulli Distribution",
xlab = "Theta (Heads)",
ylab = "Likelihood", lwd = 2)
# Find the theta value that maximizes the likelihood
theta_MLE <- theta_values[which.max(likelihood_values)]
theta_MLE
theta_values <- seq(0, 1, length.out = 10000)
successes <- 3
failures <- n - successes
likelihood_function <- function(theta) {
return((theta^successes) * ((1 - theta)^failures))
}
theta_values <- seq(0, 1, length.out = 10000)
# Calculate the likelihood for each theta
likelihood_values <- sapply(theta_values, likelihood_function)
likelihood_values <- numeric(length(theta_values))
# Perform grid search
for (i in 1:length(theta_values)) {
likelihood_values[i] <- likelihood_function(theta_values[i])
}
# Find the theta value that maximizes the likelihood
theta_MLE <- theta_values[which.max(likelihood_values)]
max_likelihood <- max(likelihood_values)
theta_MLE
